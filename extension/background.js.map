{"version":3,"file":"background.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;AACA;;AAAA;AAEA;AACA;AACA;AACA;AAEA;;;;;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AEjDA;AACA;AACA;AACA;AACA","sources":["webpack://chrome-extension-react-typescript-boilerplate/./src/background.ts","webpack://chrome-extension-react-typescript-boilerplate/webpack/before-startup","webpack://chrome-extension-react-typescript-boilerplate/webpack/startup","webpack://chrome-extension-react-typescript-boilerplate/webpack/after-startup"],"sourcesContent":["const restrictedURLs = [\n  'chrome://extensions/',\n  'https://chrome.google.com/webstore/',\n  'chrome-extension://',\n]\n\nconst isRestricted = (url: string): boolean =>\n  restrictedURLs.some((restrictedURL) => url.startsWith(restrictedURL))\n\nconst readLocalStorage = async (key: string) => {\n  return new Promise((resolve, _reject) => {\n    chrome.storage.local.get([key], (result) => {\n      resolve(result[key])\n    })\n  })\n}\n\nconst openLicensePage = () => {\n  chrome.tabs.create({\n    url: 'license.html',\n  })\n}\n\nchrome.runtime.onInstalled.addListener((details) => {\n  if (details.reason === chrome.runtime.OnInstalledReason.INSTALL) {\n    openLicensePage()\n  }\n})\n\nchrome.action.onClicked.addListener(async function () {\n  const license = await readLocalStorage('paid_license')\n\n  if (!license) {\n    openLicensePage()\n    return\n  }\n\n  chrome.tabs.create({ url: 'popup.html' })\n})\n\nchrome.runtime.onMessage.addListener(\n  (license: { type: string; input: string }) => {\n    if (license.type === 'check-license') {\n      const val = license.input.toLowerCase()\n      if (val === 'mementomori') {\n        chrome.storage.local.set({ paid_license: true })\n        chrome.tabs.update({ url: 'popup.html' })\n      }\n    }\n  }\n)\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/background.ts\"]();\n",""],"names":[],"sourceRoot":""}